import React, { useState } from "react";
import { makeStyles } from '@material-ui/core/styles';
import Paper from '@material-ui/core/Paper';
import TextField from '@material-ui/core/TextField';
import InputLabel from '@material-ui/core/InputLabel';
import MenuItem from '@material-ui/core/MenuItem';
import FormControl from '@material-ui/core/FormControl';
import FormHelperText from '@material-ui/core/FormHelperText';
import Select from '@material-ui/core/Select';
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';

const useStyles = makeStyles(theme => ({
  root: {
    padding: theme.spacing(3, 2),
    width: '60%',
    marginTop: theme.spacing(10),
    marginLeft: theme.spacing(25),
    overflowX: 'auto',
    align: 'center',
  },
  paper: {
    padding: theme.spacing(3, 2),
    textAlign: 'center',
    color: theme.palette.text.secondary,
  },
  container: {
    display: 'flex',
    flexWrap: 'wrap',
  },
  textField: {
    marginLeft: theme.spacing(1),
    marginRight: theme.spacing(1),
    width: 200,
  },
  dense: {
    marginTop: 19,
  },
  menu: {
    width: 200,
  },
  formControl: {
    margin: theme.spacing(3),
  },
  button: {
    margin: theme.spacing(1),
  },
}));

const genderOptions = [
  { label: 'Male', value: "0" },
  { label: 'Female', value: "1" },
  { label: 'Others', value: "2" },
  { label: 'Not Applicable', value: "3" }
];

const roleOptions = [
  { label: 'Batsman', value: "0" },
  { label: 'Bowler', value: "1" },
  { label: 'All Rounder', value: "2" },
  { label: 'Wicket Keeper', value: "3" }
];

const handStyleOptions = [
  { label: 'Right Handed', value: "0" },
  { label: 'Left Handed', value: "1" }
];

const teamList = [
  { name: 'Giants', value: "0" },
  { name: 'Acc Rattlers', value: "1" }
];

export const AddPlayer = ({ handleClose }) => {

  const classes = useStyles();

  const processData = () => {
    console.log("Player Added");
    handleClose();
  }

  const [gender, setGender] = useState("3");
  const [team, setTeam] = useState("");
  const [fname, setFname] = useState("");
  const [lname, setLname] = useState("");
  const [dname, setDname] = useState("");
  const [role, setRole] = useState("2");
  const [bthand, setBthand] = useState("0");
  const [bohand, setBohand] = useState("0");

  return (
    <Paper className={classes.root}>
      <Typography variant="h3" component="h2" gutterBottom>
        Player Details
      </Typography>
      <TextField
        id="id-fname"
        label="First Name"
        className={classes.textField}
        margin="normal"
        value={fname}
        onChange={e => setFname(e.target.value)}
        required
        autoFocus={true}
      />
      <TextField
        id="id-lname"
        label="Last Name"
        className={classes.textField}
        margin="normal"
        value={lname}
        onChange={e => setLname(e.target.value)}
        required
      />
      <TextField
        id="id-dname"
        label="Display Name"
        className={classes.textField}
        margin="normal"
        value={dname}
        onChange={e => setDname(e.target.value)}
        helperText="default to firstname."
      />
      <br />
      <FormControl className={classes.formControl} required>
        <InputLabel htmlFor="gender-simple">Gender</InputLabel>
        <Select
          value={gender}
          onChange={e => setGender(e.target.value)}
        >
          {
            genderOptions.map(
              gen => <MenuItem value={gen.value} key={gen.value}>{gen.label}</MenuItem>
            )
          }
        </Select>
      </FormControl>
      <FormControl className={classes.formControl} required>
        <InputLabel htmlFor="team-simple">Team Name</InputLabel>
        <Select
          value={team}
          onChange={e => setTeam(e.target.value)}
        >
          {
            teamList.map(
              team => <MenuItem value={team.value} key={team.value}>{team.name}</MenuItem>
            )
          }
        </Select>
        <FormHelperText>select your team name</FormHelperText>
      </FormControl><br />
      <FormControl className={classes.formControl} required>
        <InputLabel htmlFor="role-simple">Role</InputLabel>
        <Select
          value={role}
          onChange={e => setRole(e.target.value)}
        >
          {
            roleOptions.map(
              role => <MenuItem value={role.value} key={role.value}>{role.label}</MenuItem>
            )
          }
        </Select>
      </FormControl>
      <FormControl className={classes.formControl} required>
        <InputLabel htmlFor="role-simple">Batting Style</InputLabel>
        <Select
          value={bthand}
          onChange={e => setBthand(e.target.value)}
        >
          {
            handStyleOptions.map(
              hand => <MenuItem value={hand.value} key={hand.value}>{hand.label}</MenuItem>
            )
          }
        </Select>
      </FormControl>
      <FormControl className={classes.formControl} required>
        <InputLabel htmlFor="role-simple">Bowling Style</InputLabel>
        <Select
          value={bohand}
          onChange={e => setBohand(e.target.value)}
        >
          {
            handStyleOptions.map(
              hand => <MenuItem value={hand.value} key={hand.value}>{hand.label}</MenuItem>
            )
          }
        </Select>
      </FormControl><br />
      <Button variant="contained" className={classes.button} onClick={()=>handleClose()}>
        Cancel
      </Button>
      <Button variant="contained" color="primary" className={classes.button} onClick={processData}>
        Add Player
      </Button>
    </Paper>
  );
}




----------------------------------



import React, { useState } from "react";
import { AddPlayer } from "./AddPlayer";
import { makeStyles } from '@material-ui/core/styles';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import Paper from '@material-ui/core/Paper';
import Button from '@material-ui/core/Button';
import Modal from '@material-ui/core/Modal';
import Container from '@material-ui/core/Container';

const useStyles = makeStyles(theme => ({
    root: {
        width: '60%',
        marginTop: theme.spacing(3),
        overflowX: 'auto',
        align: 'center',
    },
    table: {
        minWidth: 650,
    },
    div: {
        border: 'none',   
    }
}));

const players = [
    {
        id: 1,
        fname: "Balamurugan",
        lname: "Muthu",
        dname: "Balamurugan"
    },
    {
        id: 2,
        fname: "Inniyan",
        lname: "Muthu",
        dname: "Inniyan"
    }
];

export const PlayersList = () => {

    const [open, setOpen] = useState(false);

    const handleClose = () => {
        setOpen(false);
    };

    const handleOpen = () => {
        setOpen(true);
    };

    const classes = useStyles();
    return (
        <Paper className={classes.root}>
            <Table className={classes.table}>
                <TableHead>
                    <TableRow>
                        <TableCell>First Name</TableCell>
                        <TableCell>Last Name</TableCell>
                        <TableCell>Display Name</TableCell>
                        <TableCell></TableCell>
                    </TableRow>
                </TableHead>
                <TableBody>
                    {players.map(player => (
                        <TableRow key={player.id}>
                            <TableCell component="th" scope="row">
                                {player.fname}
                            </TableCell>
                            <TableCell>{player.lname}</TableCell>
                            <TableCell>{player.dname}</TableCell>
                            <TableCell></TableCell>
                        </TableRow>
                    ))}
                </TableBody>
            </Table><br />
            <Button color="primary" className={classes.button} onClick={handleOpen}>
                Add Player
            </Button>
            <Modal
                aria-labelledby="simple-modal-title"
                aria-describedby="simple-modal-description"
                open={open}
                onClose={handleClose}
                disableBackdropClick={true}
                
            >
                <Container fixed={false}>
                    <AddPlayer handleClose={() => handleClose()} />
                </Container>
            </Modal>
        </Paper>
    );
}
